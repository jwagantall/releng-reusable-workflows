---
name: Compose Maven Verify

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      GERRIT_BRANCH:
        description: "Branch that change is against"
        required: true
        type: string
      GERRIT_CHANGE_ID:
        description: "The ID for the change"
        required: true
        type: string
      GERRIT_CHANGE_NUMBER:
        description: "The Gerrit number"
        required: true
        type: string
      GERRIT_CHANGE_URL:
        description: "URL to the change"
        required: true
        type: string
      GERRIT_EVENT_TYPE:
        description: "Type of Gerrit event"
        required: true
        type: string
      GERRIT_PATCHSET_NUMBER:
        description: "The patch number for the change"
        required: true
        type: string
      GERRIT_PATCHSET_REVISION:
        description: "The revision sha"
        required: true
        type: string
      GERRIT_PROJECT:
        description: "Project in Gerrit"
        required: true
        type: string
      GERRIT_REFSPEC:
        description: "Gerrit refspec of change"
        required: true
        type: string
      JDK_VERSION:
        description: "OpenJDK version"
        required: false
        default: "17"
        type: string
      MVN_VERSION:
        description: "Maven version"
        required: false
        default: "3.8.2"
        type: string
      MVN_PARAMS:
        description: "Maven parameters to pass to the mvn command"
        required: false
        default: ""
        type: string
      MVN_PHASES:
        description: "Comma separated list of phases to execute"
        required: false
        default: "clean deploy"
        type: string
      MVN_OPTS:
        description: "Maven options"
        required: false
        # yamllint disable rule:line-length
        default: >-
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
          -Dmaven.repo.local=/tmp/r -Dorg.ops4j.pax.url.mvn.localRepository=/tmp/r
          -DaltDeploymentRepository=staging::default::file:"${GITHUB_WORKSPACE}"/m2repo
        # yamllint enable rule:line-length
        type: string
      MVN_POM_FILE:
        description: "Directory with pom.xml"
        required: false
        default: "pom.xml"
        type: string
      MVN_PROFILES:
        description: "Comma-delimited list of profiles to activate"
        required: false
        default: ""
        type: string
      ENV_VARS:
        # yamllint disable-line rule:line-length
        description: "Pass GitHub variables to be exported as environment variables via `toJSON(vars)` or specific variables encoded in JSON format"
        required: false
        default: "{}"
        type: string
      ENV_SECRETS:
        # yamllint disable-line rule:line-length
        description: "Pass GitHub secrets to be exported as environment variables via `toJSON(secrets)` or specific secrets encoded in JSON format"
        required: false
        default: "{}"
        type: string

concurrency:
  # yamllint disable-line rule:line-length
  group: compose-maven-verify-${{ github.workflow }}-${{ github.event.inputs.GERRIT_CHANGE_ID || github.run_id }}
  cancel-in-progress: true

jobs:
  maven-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.GERRIT_BRANCH }}
          submodules: "true"
      # yamllint disable-line rule:line-length
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v5.0.0
        id: setup-python
        with:
          python-version: "3.8"
      - name: Setup JDK ${{ inputs.JDK_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.JDK_VERSION }}
          distribution: 'oracle'
      - name: Setup Maven ${{ inputs.MVN_VERSION }}
        uses: s4u/setup-maven-action@v1.10.0
        with:
          maven-version: ${{ inputs.MVN_VERSION }}
      - name: Export env variables
        uses: infovista-opensource/vars-to-env-action@1.0.0
        with:
          secrets: ${{ inputs.ENV_VARS }}
      - name: Export env secrets
        uses: infovista-opensource/vars-to-env-action@1.0.0
        with:
          secrets: ${{ inputs.ENV_SECRETS }}
      - name: Obtain global settings file
        # yamllint disable rule:line-length
        run: |
          if [[ "${{ vars.ORGANIZATION }}" == "opendaylight" ]]; then
              CI_REPO="releng-builder"
          else
              CI_REPO="ci-management"
          fi
          wget -q -O global-settings.xml "https://raw.githubusercontent.com/${{ vars.ORGANIZATION }}/${CI_REPO}/master/jenkins-config/managed-config-files/globalMavenSettings/global-settings/content"
          sed -i 's#\^${#${#' global-settings.xml
        # yamllint enable rule:line-length
      - name: Generate project settings file
        # yamllint disable-line rule:line-length
        uses: s4u/maven-settings-action@7802f6aec16c9098b4798ad1f1d8ac75198194bd  # v3.0.0
        with:
          servers: |
            [{
                "id": "docker.io",
                "username": "${{ vars.DOCKERHUB_USER }}",
                "password": "${{ secrets.DOCKERHUB_PASSWORD }}"
            },
            {
                "id": "${{ vars.CONTAINER_PUBLIC_REGISTRY }}",
                "username": "${{ vars.NEXUS3_USER }}",
                "password": "${{ secrets.NEXUS3_READONLY_PASSWORD }}"
            },
            {
                "id": "${{ vars.CONTAINER_PULL_REGISTRY }}",
                "username": "${{ vars.NEXUS3_USER }}",
                "password": "${{ secrets.NEXUS3_PASSWORD }}"
            },
            {
                "id": "${{ vars.CONTAINER_PUSH_REGISTRY }}",
                "username": "${{ vars.NEXUS3_USER }}",
                "password": "${{ secrets.NEXUS3_PASSWORD }}"
            },
            {
                "id": "${{ vars.CONTAINER_STAGING_REGISTRY }}",
                "username": "${{ vars.NEXUS3_USER }}",
                "password": "${{ secrets.NEXUS3_PASSWORD }}"
            },
            {
                "id": "${{ vars.NEXUS_ORG }}-snapshots",
                "username": "${{ vars.NEXUS_USER }}",
                "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
                "id": "${{ vars.NEXUS_ORG }}-staging",
                "username": "${{ vars.NEXUS_USER }}",
                "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
                "id": "${{ vars.NEXUS_ORG }}-releases",
                "username": "${{ vars.NEXUS_USER }}",
                "password": "${{ secrets.NEXUS_PASSWORD }}"
            },
            {
                "id": "${{ vars.NEXUS_ORG }}-site",
                "username": "${{ vars.NEXUS_USER }}",
                "password": "${{ secrets.NEXUS_PASSWORD }}"
            }]
      - name: Build code with Maven
        # yamllint disable rule:line-length
        run: |
          echo "Maven build starting"

          mvn ${{ inputs.MVN_PHASES }} \
              -e \
              --global-settings global-settings.xml \
              --settings settings.xml \
              -DaltDeploymentRepository=staging::default::file:"${GITHUB_WORKSPACE}"/m2repo \
              ${{ inputs.MVN_OPTS }} ${{ inputs.MVN_PARAMS }}
        # yamllint enable rule:line-length
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true
          on-missing-report: quiet
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
